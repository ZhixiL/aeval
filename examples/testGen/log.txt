Running: ./genEx1.smt2
S: true
T: xists y, ((((x1/2)+3)<((-5)*y))&&((((x1/3)+(x2/3))+4)<((-4)*y)))
sameTypeSet: (((5*y)<((-(x1/2))+-3))&&((4*y)<[+    -(x1/3)    -(x2/3)    -4]))
Before mixQE: (exists (INT) ((((x1/2)+3)<((-5)*y))&&((((x1/3)+(x2/3))+4)<((-4)*y))))
After mixQE: true
mixQE() Equivalence Check: 1
Sanity MBP (1): 1
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 1
Iter: 1; Result: valid
'exists v. s => t' isEquiv to 'disjunctions of projections': 11



 skolMaps [ 0, y ] = (((5*y)<((-(x1/2))+-3))&&((4*y)<[+    -(x1/3)    -(x2/3)    -4]))
Printing original SMT formula:
(((5*y)<((-(x1/2))+-3))&&((4*y)<[+    -(x1/3)    -(x2/3)    -4]))
Expressions after oldNormalizationGen(): ((y<=((((-(x1/2))+-3)-1)/5))&&(y<=(([+    -(x1/3)    -(x2/3)    -4]-1)/4)))
oldNormalizationGen check, beginning equivalent to result: 1
getAssignmentForVar y in:  ((y<=((((-(x1/2))+-3)-1)/5))&&(y<=(([+    -(x1/3)    -(x2/3)    -4]-1)/4)))
(define-fun y ((x1 Int)(x2 Int)) Int
  (ite (> (div (+ (- (div x1 2)) (- 3) (- 1)) 5) (let ((a!1 (div (+ (- (div x1 3)) (- (div x2 3)) (- 4) (- 1)) 4)))
  (+ a!1 0))) (div (+ (- (div x1 3)) (- (div x2 3)) (- 4) (- 1)) 4) (div (+ (- (div x1 2)) (- 3) (- 1)) 5)))
Sanity check [split]: 1


Running: ./genEx10.smt2
S: true
T: xists y, ((((-3)*y)>(((-4)*x1)+((-5)*x2)))&&((((x1/3)+((-4)*x2))+2)>((-5)*y)))
sameTypeSet: (((-3*y)>((-4*x1)+(-5*x2)))&&((5*y)>[+    -(x1/3)    4*x2    -2]))
Before mixQE: (exists (INT) ((((-3)*y)>(((-4)*x1)+((-5)*x2)))&&((((x1/3)+((-4)*x2))+2)>((-5)*y))))
After mixQE: (((3*[+    -(x1/3)    4*x2    -2])<(5*(((-1)*((-4*x1)+(-5*x2)))-1)))&&(((3*[+    -(x1/3)    4*x2    -2])/15)<((5*(((-1)*((-4*x1)+(-5*x2)))-1))/15)))
mixQE() Equivalence Check: 1


Running: ./genEx2.smt2
S: true
T: xists y, (((4*y)<=((x1/2)+(5*x2)))&&(((x1/3)+2)>=(y/2)))
sameTypeSet: (((4*y)<=((x1/2)+(5*x2)))&&(((x1/3)+(-(y/2)))>=-2))
Before mixQE: (exists (INT) (((4*y)<=((x1/2)+(5*x2)))&&(((x1/3)+2)>=(y/2))))
After mixQE: true


Running: ./genEx3.smt2
S: true
T: xists y, (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)!=((((-3)*x1)+((-3)*x2))+1)))
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (([+    y/2    5*x1    -(x2/3)]>=4)&&([+    y/4    3*x1    3*x2]<1))
Before mixQE: (exists (INT) (((y/2)>=((((-5)*x1)+(x2/3))+4))&&((y/4)<((((-3)*x1)+((-3)*x2))+1))))
After mixQE: ((4-1)<(1-1))


Running: ./genEx4.smt2
S: true
T: xists y, (((4*y)<=(x1/2))&&((y/3)<=((5*x1)+(x2/3))))
sameTypeSet: (((4*y)<=(x1/2))&&([+    y/3    -5*x1    -(x2/3)]<=0))
Before mixQE: (exists (INT) (((4*y)<=(x1/2))&&((y/3)<=((5*x1)+(x2/3)))))
After mixQE: true


Running: ./genEx5.smt2
S: true
T: xists y, ((((-5)*y)>((4*x1)+(x2/3)))&&(((x1/2)+(x2/3))<(y/2)))
sameTypeSet: (((-5*y)>((4*x1)+(x2/3)))&&([+    x2/3    x1/2    -(y/2)]<0))
Before mixQE: (exists (INT) ((((-5)*y)>((4*x1)+(x2/3)))&&(((x1/2)+(x2/3))<(y/2))))
After mixQE: true
mixQE() Equivalence Check: 0
Sanity MBP (1): 1
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 1
Iter: 1; Result: valid
'exists v. s => t' isEquiv to 'disjunctions of projections': 01



 skolMaps [ 0, y ] = (((-5*y)>((4*x1)+(x2/3)))&&([+    x2/3    x1/2    -(y/2)]<0))
Printing original SMT formula:
(((-5*y)>((4*x1)+(x2/3)))&&([+    x2/3    x1/2    -(y/2)]<0))
The current operation on LHS : [+    x2/3    x1/2    -(y/2)] is not supported!
Expressions after oldNormalizationGen(): (y<=((((-1)*((4*x1)+(x2/3)))-1)/5))
oldNormalizationGen check, beginning equivalent to result: 0
getAssignmentForVar y in:  (y<=((((-1)*((4*x1)+(x2/3)))-1)/5))
(define-fun y ((x1 Int)(x2 Int)) Int
  (let ((a!1 (- (* (- 1) (+ (* 4 x1) (div x2 3))) 1)))
  (div a!1 5)))
Sanity check [split]: 0


Running: ./genEx6.smt2
S: true
T: xists y, ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2))))
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))
mixQE() Equivalence Check: 0
Sanity MBP (1): 0
Sanity MBP (2): 0
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 0
z3_qe_model_project_skolem => cur MBP: 0
sameTypeSet: (((-5*y)>=((x1/2)+2))&&([+    y/3    5*x1    -(x2/2)]>0))
Before mixQE: (exists (INT) ((((-5)*y)>=((x1/2)+2))&&((y/3)>(((-5)*x1)+(x2/2)))))
After mixQE: (((5*0)<(1*((-1)*((x1/2)+2))))&&(((5*0)/5)<((1*((-1)*((x1/2)+2)))/5)))


Running: ./genEx7.smt2
S: true
T: xists y, ((((x1/3)+(x2/3))=(y/2))&&(((-4)*y)>=((5*x1)+2)))
sameTypeSet: [&&    (-4*y)>=((5*x1)+2)    [+    x1/3    x2/3    -(y/2)]>=0    [+    x1/3    x2/3    -(y/2)]<=0]
Before mixQE: (exists (INT) [&&    ((-4)*y)>=((5*x1)+2)    ((x1/3)+(x2/3))>=(y/2)    ((x1/3)+(x2/3))<=(y/2)])
After mixQE: [&&    (4*(0-1))<(1*((-1)*((5*x1)+2)))    ((4*(0-1))/4)<((1*((-1)*((5*x1)+2)))/4)    (4*(0-1))<(4*0)    ((4*(0-1))/4)<((4*0)/4)]
mixQE() Equivalence Check: 0


Running: ./genEx8.smt2
S: true
T: xists y, (((y/4)>(x1/4))&&((((x1/2)+(x2/4))+4)!=(y/3)))
sameTypeSet: ((((y/4)+(-(x1/4)))>0)&&([+    x1/2    x2/4    -(y/3)]<-4))
Before mixQE: (exists (INT) (((y/4)>(x1/4))&&((((x1/2)+(x2/4))+4)<(y/3))))
After mixQE: true


Running: ./genEx9.smt2
S: true
T: xists y, ((((-3)*y)<=(((-3)*x1)+1))&&((3*y)<=(((x1/3)+((-4)*x2))+1)))
sameTypeSet: (((-3*y)<=((-3*x1)+1))&&((3*y)<=[+    -4*x2    x1/3    1]))
Before mixQE: (exists (INT) ((((-3)*y)<=(((-3)*x1)+1))&&((3*y)<=(((x1/3)+((-4)*x2))+1))))
After mixQE: (((1*(((-1)*((-3*x1)+1))-1))<(1*[+    -4*x2    x1/3    1]))&&(((1*(((-1)*((-3*x1)+1))-1))/3)<((1*[+    -4*x2    x1/3    1])/3)))
mixQE() Equivalence Check: 1
Sanity MBP (1): 1
Sanity MBP (2): 1
Checking implications: 
cur MBP => z3_qe_model_project_skolem: 1
z3_qe_model_project_skolem => cur MBP: 1
Iter: 1; Result: invalid
'exists v. s => t' isEquiv to 'disjunctions of projections': 11



(model
)
Sanity check [model, S-part]: 1
Sanity check [model, T-part]: 0

valid subset:
(assert (and (< (* (- 1) (+ (* (- 3) x1) 1)) (+ (div x1 3) (* (- 4) x2) 2)) (< (let ((a!1 (- (* (- 1) (+ (* (- 3) x1) 1)) 1)))
  (div a!1 3)) (+ (div (+ (div x1 3) (* (- 4) x2) 1) 3) 0))))


