./genEx1.smt2 failed, following are the detail:
Printing original SMT formula:
((((((4*x1)+((-4)*x2))+(3*x3))=(y/3))&&(((x1/2)+((-5)*x2))=((-5)*y)))&&(((3*y)>(((x2/2)+((-4)*x1))+3))&&((((((x1/4)+((-3)*x3))+(x4/2))+(x2/3))+1)<(y/3))))
Following expressions divided by comparison type:
E: (y=(((-1)*((x1/2)+((-5)*x2)))/5)) 
D: 
G: (y>((3*(((4*x1)+((-4)*x2))+(3*x3)))-1)) (y>((((x2/2)+((-4)*x1))+3)/3)) (y>(((3*(((((x1/4)+((-3)*x3))+(x4/2))+(x2/3))+1))+3)-1)) 
LE: (y<=(((3*(((4*x1)+((-4)*x2))+(3*x3)))+3)-1)) 
Is the end equivalent to the beginning: 0

./genEx10.smt2 returned 1, success!

./genEx100.smt2 returned 1, success!

./genEx11.smt2 failed, following are the detail:
Printing original SMT formula:
((((x1/2)=(y/3))&&(!((((((-4)*x1)+(x2/4))+(x3/3))+1)=(3*y))))&&((y/2)<((((-3)*x3)+((-3)*x1))+(5*x2))))
Following expressions divided by comparison type:
E: 
D: (y!=((((((-4)*x1)+(x2/4))+(x3/3))+1)/3)) 
G: (y>((3*(x1/2))-1)) 
LE: (y<=(((3*(x1/2))+3)-1)) (y<=(((2*(((((-3)*x3)+((-3)*x1))+(5*x2))-1))+2)-1)) 
Is the end equivalent to the beginning: 0

./genEx12.smt2 returned 1, success!

./genEx13.smt2 returned 1, success!

./genEx14.smt2 returned 1, success!

./genEx15.smt2 returned 1, success!

./genEx16.smt2 failed, following are the detail:
Printing original SMT formula:
((!((5*y)=((x1/3)+(x2/2))))&&((y/3)<=((-4)*x1)))
Following expressions divided by comparison type:
E: 
D: (y!=(((x1/3)+(x2/2))/5)) 
G: 
LE: (y<=(((3*((-4)*x1))+3)-1)) 
Is the end equivalent to the beginning: 0

./genEx17.smt2 returned 1, success!

./genEx18.smt2 failed, following are the detail:
Printing original SMT formula:
(((-5)*y)=((((5*x1)+(x4/2))+(x3/4))+((-5)*x2)))
Following expressions divided by comparison type:
E: (y=(((-1)*((((5*x1)+(x4/2))+(x3/4))+((-5)*x2)))/5)) 
D: 
G: 
LE: 
Is the end equivalent to the beginning: 0

./genEx19.smt2 failed, following are the detail:
Printing original SMT formula:
((((y/3)>=(((((4*x1)+(3*x4))+(4*x3))+(5*x2))+1))&&(((3*x2)+((-4)*x1))=((-5)*y)))&&((((-5)*x1)+1)>((-4)*y)))
Following expressions divided by comparison type:
E: (y=(((-1)*((3*x2)+((-4)*x1)))/5)) 
D: 
G: (y>(((3*((((((4*x1)+(3*x4))+(4*x3))+(5*x2))+1)-1))+3)-1)) (y>(((-1)*(((-5)*x1)+1))/4)) 
LE: 
Is the end equivalent to the beginning: 0

./genEx2.smt2 returned 1, success!

./genEx20.smt2 returned 1, success!

./genEx21.smt2 returned 1, success!

./genEx22.smt2 failed, following are the detail:
Printing original SMT formula:
(((((-3)*y)>=((x1/3)+(3*x2)))&&(!((y/3)=(((-5)*x1)+(x2/3)))))&&(((((x3/3)+((-3)*x1))+((-5)*x2))+(x4/3))=((-3)*y)))
Following expressions divided by comparison type:
E: (y=(((-1)*((((x3/3)+((-3)*x1))+((-5)*x2))+(x4/3)))/3)) 
D: (y!=((3*(((-5)*x1)+(x2/3)))+2)) (y!=((3*(((-5)*x1)+(x2/3)))+1)) (y!=(3*(((-5)*x1)+(x2/3)))) 
G: 
LE: (y<=(((-1)*((x1/3)+(3*x2)))/3)) 
Is the end equivalent to the beginning: 0

./genEx23.smt2 returned 1, success!

./genEx24.smt2 returned 1, success!

./genEx25.smt2 returned 1, success!

./genEx26.smt2 returned 1, success!

./genEx27.smt2 failed, following are the detail:
Printing original SMT formula:
(!(((-5)*y)=((((3*x1)+(x2/3))+(x3/3))+1)))
Following expressions divided by comparison type:
E: 
D: (y!=(((-1)*((((3*x1)+(x2/3))+(x3/3))+1))/5)) 
G: 
LE: 
Is the end equivalent to the beginning: 0

./genEx28.smt2 returned 1, success!

./genEx29.smt2 returned 1, success!

./genEx3.smt2 returned 1, success!

./genEx30.smt2 failed, following are the detail:
Printing original SMT formula:
(((((((x1/3)+(5*x4))+(4*x3))+(5*x2))=((-5)*y))&&(!((((x2/4)+(x1/4))+3)=(y/2))))&&(((y/3)=((-5)*x1))&&(!((((x1/2)+((-3)*x2))+1)=(y/2)))))
Following expressions divided by comparison type:
E: (y=(((-1)*((((x1/3)+(5*x4))+(4*x3))+(5*x2)))/5)) 
D: (y!=((2*(((x2/4)+(x1/4))+3))+1)) (y!=(2*(((x2/4)+(x1/4))+3))) (y!=((2*(((x1/2)+((-3)*x2))+1))+1)) (y!=(2*(((x1/2)+((-3)*x2))+1))) 
G: (y>((3*((-5)*x1))-1)) 
LE: (y<=(((3*((-5)*x1))+3)-1)) 
Is the end equivalent to the beginning: 0

./genEx31.smt2 returned 1, success!

./genEx32.smt2 returned 1, success!

./genEx33.smt2 failed, following are the detail:
Printing original SMT formula:
(((!(((((-5)*x1)+(4*x2))+2)=(y/3)))&&((3*y)=(((((-5)*x3)+(3*x2))+(4*x1))+4)))&&(((((4*x2)+(x1/2))+(5*x3))=(y/3))&&((4*y)>(5*x1))))
Following expressions divided by comparison type:
E: (y=((((((-5)*x3)+(3*x2))+(4*x1))+4)/3)) 
D: (y!=((3*((((-5)*x1)+(4*x2))+2))+2)) (y!=((3*((((-5)*x1)+(4*x2))+2))+1)) (y!=(3*((((-5)*x1)+(4*x2))+2))) 
G: (y>((3*(((4*x2)+(x1/2))+(5*x3)))-1)) (y>((5*x1)/4)) 
LE: (y<=(((3*(((4*x2)+(x1/2))+(5*x3)))+3)-1)) 
Is the end equivalent to the beginning: 0

./genEx34.smt2 returned 1, success!

./genEx35.smt2 failed, following are the detail:
Printing original SMT formula:
(((!(((-4)*y)=((((x1/3)+(x2/4))+(5*x3))+3)))&&((5*y)<((((4*x3)+(x1/2))+((-3)*x2))+1)))&&((((((x1/2)+(x3/3))+(3*x2))+3)<=((-5)*y))&&((x1/4)<=(y/4))))
Following expressions divided by comparison type:
E: 
D: (y!=(((-1)*((((x1/3)+(x2/4))+(5*x3))+3))/4)) 
G: (y>(((4*((x1/4)-1))+4)-1)) 
LE: (y<=((((((4*x3)+(x1/2))+((-3)*x2))+1)-1)/5)) (y<=(((-1)*((((x1/2)+(x3/3))+(3*x2))+3))/5)) 
Is the end equivalent to the beginning: 0

./genEx36.smt2 failed, following are the detail:
Printing original SMT formula:
((((x1/2)+(x2/4))=((-5)*y))&&(((-3)*y)<(((5*x3)+((-4)*x2))+((-4)*x1))))
Following expressions divided by comparison type:
E: (y=(((-1)*((x1/2)+(x2/4)))/5)) 
D: 
G: (y>(((-1)*(((5*x3)+((-4)*x2))+((-4)*x1)))/3)) 
LE: 
Is the end equivalent to the beginning: 0

./genEx37.smt2 returned 1, success!

./genEx38.smt2 returned 1, success!

./genEx39.smt2 returned 1, success!

./genEx4.smt2 returned 1, success!

./genEx40.smt2 failed, following are the detail:
Printing original SMT formula:
(((((-4)*y)=((((x1/2)+(x4/2))+(3*x3))+(4*x2)))&&(((-4)*y)>((x2/3)+(3*x1))))&&(((y/3)=(((x1/4)+(x2/3))+1))&&(((3*x1)+1)<(3*y))))
Following expressions divided by comparison type:
E: (y=(((-1)*((((x1/2)+(x4/2))+(3*x3))+(4*x2)))/4)) 
D: 
G: (y>((3*(((x1/4)+(x2/3))+1))-1)) (y>(((3*x1)+1)/3)) 
LE: (y<=((((-1)*((x2/3)+(3*x1)))-1)/4)) (y<=(((3*(((x1/4)+(x2/3))+1))+3)-1)) 
Is the end equivalent to the beginning: 0

./genEx41.smt2 failed, following are the detail:
Printing original SMT formula:
(((((((-5)*x1)+(x4/3))+((-5)*x3))+(4*x2))<=((-3)*y))&&((((x2/2)+(x1/4))+3)=((-5)*y)))
Following expressions divided by comparison type:
E: (y=(((-1)*(((x2/2)+(x1/4))+3))/5)) 
D: 
G: 
LE: (y<=(((-1)*(((((-5)*x1)+(x4/3))+((-5)*x3))+(4*x2)))/3)) 
Is the end equivalent to the beginning: 0

./genEx42.smt2 returned 1, success!

./genEx43.smt2 returned 1, success!

./genEx44.smt2 returned 1, success!

./genEx45.smt2 returned 1, success!

./genEx46.smt2 returned 1, success!

./genEx47.smt2 returned 1, success!

./genEx48.smt2 returned 1, success!

./genEx49.smt2 failed, following are the detail:
Printing original SMT formula:
((((y/4)<=(((x1/4)+(x2/3))+(4*x3)))&&((y/3)=((x1/4)+(4*x2))))&&((3*y)=((((4*x2)+(5*x1))+(4*x3))+1)))
Following expressions divided by comparison type:
E: (y=(((((4*x2)+(5*x1))+(4*x3))+1)/3)) 
D: 
G: (y>((3*((x1/4)+(4*x2)))-1)) 
LE: (y<=(((4*(((x1/4)+(x2/3))+(4*x3)))+4)-1)) (y<=(((3*((x1/4)+(4*x2)))+3)-1)) 
Is the end equivalent to the beginning: 0

./genEx5.smt2 failed, following are the detail:
Printing original SMT formula:
((3*y)=(x1/3))
Following expressions divided by comparison type:
E: (y=((x1/3)/3)) 
D: 
G: 
LE: 
Is the end equivalent to the beginning: 0

./genEx50.smt2 returned 1, success!

./genEx51.smt2 failed, following are the detail:
Printing original SMT formula:
((((((x1/2)+(x2/3))+2)<=(y/3))&&(!((y/3)=((((((-4)*x3)+(3*x4))+(x2/3))+(4*x1))+2))))&&((((((-5)*x1)+(x3/2))+(x2/2))=(4*y))&&((((((x2/2)+(x3/3))+((-3)*x1))+((-5)*x4))+3)>=(y/2))))
Following expressions divided by comparison type:
E: (y=(((((-5)*x1)+(x3/2))+(x2/2))/4)) 
D: (y!=((3*((((((-4)*x3)+(3*x4))+(x2/3))+(4*x1))+2))+2)) (y!=((3*((((((-4)*x3)+(3*x4))+(x2/3))+(4*x1))+2))+1)) (y!=(3*((((((-4)*x3)+(3*x4))+(x2/3))+(4*x1))+2))) 
G: (y>(((3*((((x1/2)+(x2/3))+2)-1))+3)-1)) 
LE: (y<=(((2*(((((x2/2)+(x3/3))+((-3)*x1))+((-5)*x4))+3))+2)-1)) 
Is the end equivalent to the beginning: 0

./genEx52.smt2 returned 1, success!

./genEx53.smt2 failed, following are the detail:
Printing original SMT formula:
(((((x1/4)+((-5)*x2))=(5*y))&&((x1/3)>(y/2)))&&((5*y)<=(((((5*x3)+(x4/4))+(5*x2))+(5*x1))+3)))
Following expressions divided by comparison type:
E: (y=(((x1/4)+((-5)*x2))/5)) 
D: 
G: 
LE: (y<=(((2*((x1/3)-1))+2)-1)) (y<=((((((5*x3)+(x4/4))+(5*x2))+(5*x1))+3)/5)) 
Is the end equivalent to the beginning: 0

./genEx54.smt2 failed, following are the detail:
Printing original SMT formula:
((((-5)*y)=((((x1/3)+(x4/3))+((-5)*x3))+(3*x2)))&&((((((-4)*x2)+(x1/4))+((-3)*x4))+(3*x3))>((-5)*y)))
Following expressions divided by comparison type:
E: (y=(((-1)*((((x1/3)+(x4/3))+((-5)*x3))+(3*x2)))/5)) 
D: 
G: (y>(((-1)*(((((-4)*x2)+(x1/4))+((-3)*x4))+(3*x3)))/5)) 
LE: 
Is the end equivalent to the beginning: 0

./genEx55.smt2 failed, following are the detail:
Printing original SMT formula:
(((!(((x1/4)+((-5)*x2))=(5*y)))&&(((4*x1)+(4*x2))>=((-3)*y)))&&(!((y/3)=(((3*x3)+(x1/4))+(x2/2)))))
Following expressions divided by comparison type:
E: 
D: (y!=(((x1/4)+((-5)*x2))/5)) (y!=((3*(((3*x3)+(x1/4))+(x2/2)))+2)) (y!=((3*(((3*x3)+(x1/4))+(x2/2)))+1)) (y!=(3*(((3*x3)+(x1/4))+(x2/2)))) 
G: (y>((((-1)*((4*x1)+(4*x2)))-1)/3)) 
LE: 
Is the end equivalent to the beginning: 0

./genEx56.smt2 returned 1, success!

./genEx57.smt2 returned 1, success!

./genEx58.smt2 failed, following are the detail:
Printing original SMT formula:
(((!((((x1/3)+(x2/3))+(x3/4))=(3*y)))&&(!(((-3)*y)=(((((-3)*x3)+((-4)*x1))+(5*x2))+1))))&&((5*y)<=((-4)*x1)))
Following expressions divided by comparison type:
E: 
D: (y!=((((x1/3)+(x2/3))+(x3/4))/3)) (y!=(((-1)*(((((-3)*x3)+((-4)*x1))+(5*x2))+1))/3)) 
G: 
LE: (y<=(((-4)*x1)/5)) 
Is the end equivalent to the beginning: 0

./genEx59.smt2 returned 1, success!

./genEx6.smt2 returned 1, success!

./genEx60.smt2 returned 1, success!

./genEx61.smt2 returned 1, success!

./genEx62.smt2 failed, following are the detail:
Printing original SMT formula:
((4*y)=((x1/2)+(x2/4)))
Following expressions divided by comparison type:
E: (y=(((x1/2)+(x2/4))/4)) 
D: 
G: 
LE: 
Is the end equivalent to the beginning: 0

./genEx63.smt2 failed, following are the detail:
Printing original SMT formula:
((((((-4)*x1)+3)<=((-3)*y))&&((4*y)<=(((x1/2)+(x2/2))+2)))&&(((-4)*y)=((((-4)*x1)+((-3)*x2))+1)))
Following expressions divided by comparison type:
E: (y=(((-1)*((((-4)*x1)+((-3)*x2))+1))/4)) 
D: 
G: 
LE: (y<=(((-1)*(((-4)*x1)+3))/3)) (y<=((((x1/2)+(x2/2))+2)/4)) 
Is the end equivalent to the beginning: 0

./genEx64.smt2 returned 1, success!

./genEx65.smt2 returned 1, success!

./genEx66.smt2 returned 1, success!

./genEx67.smt2 returned 1, success!

./genEx68.smt2 failed, following are the detail:
Printing original SMT formula:
(((!(((-5)*y)=((((x1/3)+(x4/2))+((-3)*x3))+((-4)*x2))))&&(((4*x2)+((-3)*x1))<=((-5)*y)))&&((!((y/3)=(((((x1/3)+(3*x3))+(x4/3))+((-5)*x2))+3)))&&((((x3/4)+(x1/4))+((-3)*x2))<((-3)*y))))
Following expressions divided by comparison type:
E: 
D: (y!=(((-1)*((((x1/3)+(x4/2))+((-3)*x3))+((-4)*x2)))/5)) (y!=((3*(((((x1/3)+(3*x3))+(x4/3))+((-5)*x2))+3))+2)) (y!=((3*(((((x1/3)+(3*x3))+(x4/3))+((-5)*x2))+3))+1)) (y!=(3*(((((x1/3)+(3*x3))+(x4/3))+((-5)*x2))+3))) 
G: 
LE: (y<=(((-1)*((4*x2)+((-3)*x1)))/5)) (y<=((((-1)*(((x3/4)+(x1/4))+((-3)*x2)))-1)/3)) 
Is the end equivalent to the beginning: 0

./genEx69.smt2 returned 1, success!

./genEx7.smt2 returned 1, success!

./genEx70.smt2 failed, following are the detail:
Printing original SMT formula:
((!(((-3)*y)=(((5*x1)+(x2/3))+(x3/2))))&&(((x1/3)+3)=(y/4)))
Following expressions divided by comparison type:
E: 
D: (y!=(((-1)*(((5*x1)+(x2/3))+(x3/2)))/3)) 
G: (y>((4*((x1/3)+3))-1)) 
LE: (y<=(((4*((x1/3)+3))+4)-1)) 
Is the end equivalent to the beginning: 0

./genEx71.smt2 failed, following are the detail:
Printing original SMT formula:
(((!((5*y)=((x1/3)+3)))&&(!((((3*x1)+(x2/2))+((-4)*x3))=(5*y))))&&((((x1/3)+2)<=(y/4))&&(((-4)*x1)>=((-3)*y))))
Following expressions divided by comparison type:
E: 
D: (y!=(((x1/3)+3)/5)) (y!=((((3*x1)+(x2/2))+((-4)*x3))/5)) 
G: (y>(((4*(((x1/3)+2)-1))+4)-1)) (y>((((-1)*((-4)*x1))-1)/3)) 
LE: 
Is the end equivalent to the beginning: 0

./genEx72.smt2 returned 1, success!

./genEx73.smt2 returned 1, success!

./genEx74.smt2 failed, following are the detail:
Printing original SMT formula:
((((((x1/2)+(x4/3))+(x3/3))+(5*x2))<((-5)*y))&&(!(((-5)*y)=((-3)*x1))))
Following expressions divided by comparison type:
E: 
D: (y!=(((-1)*((-3)*x1))/5)) 
G: 
LE: (y<=((((-1)*((((x1/2)+(x4/3))+(x3/3))+(5*x2)))-1)/5)) 
Is the end equivalent to the beginning: 0

./genEx75.smt2 returned 1, success!

./genEx76.smt2 failed, following are the detail:
Printing original SMT formula:
((((((3*x1)+(x2/3))+(x3/4))+3)=(3*y))&&((y/2)<(((x3/4)+(x1/3))+(4*x2))))
Following expressions divided by comparison type:
E: (y=(((((3*x1)+(x2/3))+(x3/4))+3)/3)) 
D: 
G: 
LE: (y<=(((2*((((x3/4)+(x1/3))+(4*x2))-1))+2)-1)) 
Is the end equivalent to the beginning: 0

./genEx77.smt2 returned 1, success!

./genEx78.smt2 failed, following are the detail:
Printing original SMT formula:
((((5*y)=((((((-3)*x1)+(x4/2))+((-3)*x3))+(x2/2))+2))&&((y/3)=(x1/4)))&&((x1/2)=(3*y)))
Following expressions divided by comparison type:
E: (y=(((((((-3)*x1)+(x4/2))+((-3)*x3))+(x2/2))+2)/5)) (y=((x1/2)/3)) 
D: 
G: (y>((3*(x1/4))-1)) 
LE: (y<=(((3*(x1/4))+3)-1)) 
Is the end equivalent to the beginning: 0

./genEx79.smt2 failed, following are the detail:
Printing original SMT formula:
((((5*y)=((3*x1)+(x2/2)))&&((((-3)*x1)+2)=(3*y)))&&(((((x3/3)+((-5)*x2))+(x1/2))+4)=(y/4)))
Following expressions divided by comparison type:
E: (y=(((3*x1)+(x2/2))/5)) (y=((((-3)*x1)+2)/3)) 
D: 
G: (y>((4*((((x3/3)+((-5)*x2))+(x1/2))+4))-1)) 
LE: (y<=(((4*((((x3/3)+((-5)*x2))+(x1/2))+4))+4)-1)) 
Is the end equivalent to the beginning: 0

./genEx8.smt2 returned 1, success!

./genEx80.smt2 returned 1, success!

./genEx81.smt2 failed, following are the detail:
Printing original SMT formula:
(((((x1/2)+(x2/3))=(y/4))&&((y/3)>=(((-3)*x1)+(x2/3))))&&(!(((((4*x3)+(x1/4))+(x2/3))+((-4)*x4))=((-5)*y))))
Following expressions divided by comparison type:
E: 
D: (y!=(((-1)*((((4*x3)+(x1/4))+(x2/3))+((-4)*x4)))/5)) 
G: (y>((4*((x1/2)+(x2/3)))-1)) (y>(((3*((((-3)*x1)+(x2/3))-1))+3)-1)) 
LE: (y<=(((4*((x1/2)+(x2/3)))+4)-1)) 
Is the end equivalent to the beginning: 0

./genEx82.smt2 failed, following are the detail:
Printing original SMT formula:
((!((5*y)=(((-4)*x1)+3)))&&(((((x1/3)+(x2/3))+(4*x3))+2)<=(y/2)))
Following expressions divided by comparison type:
E: 
D: (y!=((((-4)*x1)+3)/5)) 
G: (y>(((2*(((((x1/3)+(x2/3))+(4*x3))+2)-1))+2)-1)) 
LE: 
Is the end equivalent to the beginning: 0

./genEx83.smt2 failed, following are the detail:
Printing original SMT formula:
(((!(((-5)*y)=((((x1/4)+((-4)*x2))+(x3/2))+3)))&&((((x1/2)+(x2/3))+2)=(4*y)))&&((5*y)<(((((-3)*x2)+(x1/2))+(x3/3))+4)))
Following expressions divided by comparison type:
E: (y=((((x1/2)+(x2/3))+2)/4)) 
D: (y!=(((-1)*((((x1/4)+((-4)*x2))+(x3/2))+3))/5)) 
G: 
LE: (y<=(((((((-3)*x2)+(x1/2))+(x3/3))+4)-1)/5)) 
Is the end equivalent to the beginning: 0

./genEx84.smt2 returned 1, success!

./genEx85.smt2 returned 1, success!

./genEx86.smt2 failed, following are the detail:
Printing original SMT formula:
((!(((-4)*y)=((x1/3)+(x2/3))))&&(((x1/4)+4)>(3*y)))
Following expressions divided by comparison type:
E: 
D: (y!=(((-1)*((x1/3)+(x2/3)))/4)) 
G: 
LE: (y<=((((x1/4)+4)-1)/3)) 
Is the end equivalent to the beginning: 0

./genEx87.smt2 failed, following are the detail:
Printing original SMT formula:
(((!(((((((-3)*x1)+(5*x4))+((-4)*x3))+(x2/2))+4)=(y/4)))&&((x1/3)>((-3)*y)))&&((!(((-5)*y)=(((((-3)*x2)+(x1/4))+(5*x3))+1)))&&(((-3)*y)>((((x4/4)+(x3/3))+((-4)*x1))+(x2/2)))))
Following expressions divided by comparison type:
E: 
D: (y!=((4*((((((-3)*x1)+(5*x4))+((-4)*x3))+(x2/2))+4))+3)) (y!=((4*((((((-3)*x1)+(5*x4))+((-4)*x3))+(x2/2))+4))+2)) (y!=((4*((((((-3)*x1)+(5*x4))+((-4)*x3))+(x2/2))+4))+1)) (y!=(4*((((((-3)*x1)+(5*x4))+((-4)*x3))+(x2/2))+4))) (y!=(((-1)*(((((-3)*x2)+(x1/4))+(5*x3))+1))/5)) 
G: (y>(((-1)*(x1/3))/3)) 
LE: (y<=((((-1)*((((x4/4)+(x3/3))+((-4)*x1))+(x2/2)))-1)/3)) 
Is the end equivalent to the beginning: 0

./genEx88.smt2 returned 1, success!

./genEx89.smt2 failed, following are the detail:
Printing original SMT formula:
((((3*y)=((((x1/3)+(x2/2))+(x3/3))+1))&&((y/3)=((-4)*x1)))&&(((3*y)>((x1/2)+(x2/3)))&&((5*y)<=(((x2/4)+(4*x1))+((-3)*x3)))))
Following expressions divided by comparison type:
E: (y=(((((x1/3)+(x2/2))+(x3/3))+1)/3)) 
D: 
G: (y>((3*((-4)*x1))-1)) (y>(((x1/2)+(x2/3))/3)) 
LE: (y<=(((3*((-4)*x1))+3)-1)) (y<=((((x2/4)+(4*x1))+((-3)*x3))/5)) 
Is the end equivalent to the beginning: 0

./genEx9.smt2 failed, following are the detail:
Printing original SMT formula:
(((((((((-4)*x1)+(x4/3))+((-4)*x3))+(x2/3))+3)=((-5)*y))&&((x1/3)<(y/3)))&&(((x2/3)+(x1/4))<(y/4)))
Following expressions divided by comparison type:
E: (y=(((-1)*((((((-4)*x1)+(x4/3))+((-4)*x3))+(x2/3))+3))/5)) 
D: 
G: (y>(((3*(x1/3))+3)-1)) (y>(((4*((x2/3)+(x1/4)))+4)-1)) 
LE: 
Is the end equivalent to the beginning: 0

./genEx90.smt2 returned 1, success!

./genEx91.smt2 failed, following are the detail:
Printing original SMT formula:
(!((3*y)=(((((-4)*x1)+((-4)*x2))+((-4)*x3))+1)))
Following expressions divided by comparison type:
E: 
D: (y!=((((((-4)*x1)+((-4)*x2))+((-4)*x3))+1)/3)) 
G: 
LE: 
Is the end equivalent to the beginning: 0

./genEx92.smt2 returned 1, success!

./genEx93.smt2 failed, following are the detail:
Printing original SMT formula:
(((((((((-5)*x1)+((-4)*x4))+(5*x3))+(x2/4))+4)<=(4*y))&&((x1/2)<=(y/2)))&&(((y/2)<=(((5*x2)+(x1/4))+3))&&((((((x1/3)+(5*x3))+((-3)*x4))+((-3)*x2))+1)=(3*y))))
Following expressions divided by comparison type:
E: (y=((((((x1/3)+(5*x3))+((-3)*x4))+((-3)*x2))+1)/3)) 
D: 
G: (y>((((((((-5)*x1)+((-4)*x4))+(5*x3))+(x2/4))+4)-1)/4)) (y>(((2*((x1/2)-1))+2)-1)) 
LE: (y<=(((2*(((5*x2)+(x1/4))+3))+2)-1)) 
Is the end equivalent to the beginning: 0

./genEx94.smt2 returned 1, success!

./genEx95.smt2 returned 1, success!

./genEx96.smt2 returned 1, success!

./genEx97.smt2 returned 1, success!

./genEx98.smt2 returned 1, success!

./genEx99.smt2 returned 1, success!

