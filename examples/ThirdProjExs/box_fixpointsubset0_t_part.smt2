(define-fun T ((%init Bool) ($envposx$0 Int) ($envposy$0 Int) ($posx$0 Int) ($posy$0 Int) ($ok1$0 Bool) ($ok2$0 Bool) ($ok3$0 Bool) ($ok4$0 Bool) ($abs~0.val$0 Int) ($abs~0.absval$0 Int) ($Initially~0.i$0 Bool) ($Initially~0.o$0 Bool) ($envposx$1 Int) ($envposy$1 Int) ($posx$1 Int) ($posy$1 Int) ($ok1$1 Bool) ($ok2$1 Bool) ($ok3$1 Bool) ($ok4$1 Bool) ($abs~0.val$1 Int) ($abs~0.absval$1 Int) ($Initially~0.i$1 Bool) ($Initially~0.o$1 Bool)) Bool (and (= $abs~0.val$1 (- $envposx$1 $posx$0)) (= $abs~0.absval$1 (ite (< $abs~0.val$1 0) (* (- 0 1) $abs~0.val$1) $abs~0.val$1)) (= $ok1$1 (and (> $posx$1 (- 0 2)) (< $posx$1 2))) (= $ok2$1 (ite %init true (and (>= $posx$1 (- $envposx$1 1)) (<= $posx$1 (+ $envposx$1 1))))) (= $ok3$1 $Initially~0.o$1) (= $ok4$1 (ite %init true (and (>= $posy$1 (- $envposy$1 1)) (<= $posy$1 (+ $envposy$1 1))))) (= $Initially~0.i$1 (and (= $posx$1 0) (= $posy$1 0))) (= $Initially~0.o$1 (ite %init $Initially~0.i$1 true)) (<= $abs~0.absval$1 1)))
(declare-fun $envposx$~1 () Int)
(declare-fun $envposy$~1 () Int)
(declare-fun $posx$~1 () Int)
(declare-fun $posy$~1 () Int)
(declare-fun $ok1$~1 () Bool)
(declare-fun $ok2$~1 () Bool)
(declare-fun $ok3$~1 () Bool)
(declare-fun $ok4$~1 () Bool)
(declare-fun $abs~0.val$~1 () Int)
(declare-fun $abs~0.absval$~1 () Int)
(declare-fun $Initially~0.i$~1 () Bool)
(declare-fun $Initially~0.o$~1 () Bool)
(declare-fun %init () Bool)
(declare-fun $envposx$0 () Int)
(declare-fun $envposy$0 () Int)
(declare-fun $posx$0 () Int)
(declare-fun $posy$0 () Int)
(declare-fun $ok1$0 () Bool)
(declare-fun $ok2$0 () Bool)
(declare-fun $ok3$0 () Bool)
(declare-fun $ok4$0 () Bool)
(declare-fun $abs~0.val$0 () Int)
(declare-fun $abs~0.absval$0 () Int)
(declare-fun $Initially~0.i$0 () Bool)
(declare-fun $Initially~0.o$0 () Bool)
(assert (T %init $envposx$~1 $envposy$~1 $posx$~1 $posy$~1 $ok1$~1 $ok2$~1 $ok3$~1 $ok4$~1 $abs~0.val$~1 $abs~0.absval$~1 $Initially~0.i$~1 $Initially~0.o$~1 $envposx$0 $envposy$0 $posx$0 $posy$0 $ok1$0 $ok2$0 $ok3$0 $ok4$0 $abs~0.val$0 $abs~0.absval$0 $Initially~0.i$0 $Initially~0.o$0))
(assert (and   (let ((a!1 (ite (<= 0 $abs~0.val$0)
                  $abs~0.val$0
                  (* $abs~0.val$0 (+ 0 (* (- 1) 1)))))
        (a!2 (not (<= $posx$0 (+ 0 (* (- 1) 2)))))
        (a!4 (and (>= $posx$0 (+ $envposx$0 (* (- 1) 1)))
                  (<= $posx$0 (+ 1 $envposx$0))))
        (a!5 (and (>= $posy$0 (+ $envposy$0 (* (- 1) 1)))
                  (<= $posy$0 (+ 1 $envposy$0))))
        (a!6 (<= (+ $envposx$0 (* (- 1) $posx$~1)) 1))
        (a!8 (<= (+ (* $envposx$0 (- 1)) $posx$~1) 0))
        (a!9 (or %init (and (<= $envposx$0 1) (>= $envposx$0 (- 1)))))
        (a!10 (or %init (and (<= $envposy$0 1) (>= $envposy$0 (- 1)))))
        (a!11 (<= (+ (* (- 1) $envposx$0) $posx$~1) 1))
        (a!12 (>= (+ $envposx$0 (* (- 1) $posx$~1)) 0))
        (a!13 (<= 0 (+ $envposx$0 (* (- 1) $posx$~1))))
        (a!14 (= (+ $envposx$0 (* (- 1) $posx$~1)) 0))
        (a!17 (<= (+ (* (- 1) $envposx$0) $posx$~1) 0))
        (a!18 (= (+ (* (- 1) $envposx$0) $posx$~1) 0))
        (a!20 (or %init (and (<= $envposx$0 0) (>= $envposx$0 (- 2))))))
  (let ((a!3 (= $ok1$0 (and a!2 (not (<= 2 $posx$0)))))
        (a!7 (and (>= (+ $envposx$0 (* (- 1) $posx$~1)) 0) %init a!6))
        (a!15 (and (or a!12 (and (not a!13) a!14))
                   (or %init (and (<= $envposx$0 0) (>= $envposx$0 (- 2))))
                   a!6))
        (a!16 (and (or a!12 (and (not a!13) a!14))
                   (or %init (and (<= $envposx$0 2) (>= $envposx$0 0)))
                   (not %init)
                   a!6))
        (a!19 (and (or (and a!17 a!18) (not a!17))
                   (or %init (and (<= $envposx$0 2) (>= $envposx$0 0)))
                   (not %init)
                   a!11)))
  (let ((a!21 (or a!7
                  (and (not a!8) a!9 a!10 a!11)
                  a!15
                  a!16
                  a!19
                  (and (or (and a!17 a!18) (not a!17)) a!20 (not %init) a!11))))
  (let ((a!22 (and (= $abs~0.val$0 (+ $envposx$0 (* (- 1) $posx$~1)))
                   (= $abs~0.absval$0 a!1)
                   a!3
                   (= $ok2$0 (or %init a!4))
                   (= $ok3$0 $Initially~0.o$0)
                   (= $ok4$0 (or %init a!5))
                   (= $Initially~0.i$0 (and (= $posx$0 0) (= $posy$0 0)))
                   (= $Initially~0.o$0 (or (not %init) $Initially~0.i$0))
                   a!21)))
    (not a!22)))))
   true))
