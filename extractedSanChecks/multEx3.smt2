(declare-fun x2 () Int)
(declare-fun x1 () Int)
(declare-fun y () Int)

(assert (let ((a!1 (< (div (- (* 5 x1) 1) 5) (+ (div (* 5 x1) 5) 0)))
      (a!2 (div (+ (* (- 4) x1) (* (- 3) x2) (- 4)) 5)))
(let ((a!3 (< a!2 (+ (div (* 5 x1) 5) 0)))
      (a!5 (< (div (- (* 5 x1) 1) 5) (+ a!2 0))))
(let ((a!4 (and a!1 (< (+ (* (- 4) x1) (* (- 3) x2)) (+ (* 5 x1) 4)) a!3))
      (a!6 (ite a!5 a!2 (div (- (* 5 x1) 1) 5))))
(let ((a!7 (ite a!4 a!6 (div (- (* 5 x1) 1) 5))))
  (= y (+ 1 a!7)))))))
(assert (or (= (+ (* 4 x1) (* 3 x2) 4) (* (- 5) y)) (not (= (* 5 y) (* 5 x1)))))
(check-sat)
